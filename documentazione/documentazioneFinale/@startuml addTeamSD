    @startuml
    skinparam sequenceMessageAlign center
    skinparam ParticipantPadding 20
    skinparam maxMessageSize 120
    skinparam responseMessageBelowArrow true

    actor Utente
    participant TeamTab
    participant "hackatonCb : JComboBox" as hackatonCb
    participant "controller : Controller" as Controller
    participant TeamForm
    participant "nomeInput : JTextField" as nomeInput
    participant TeamDAO
    database Connection as Database
    participant "createTableTeamPS : PreparedStatement" as createTableTeamPS
    participant "insertTeamPS : PreparedStatement" as insertTeamPS
    participant ResultSet

    Utente -> TeamTab : click addTeamBtn
    activate TeamTab
    TeamTab -> hackatonCb : getSelectedHackaton()
    activate hackatonCb
    hackatonCb --> TeamTab : selectedHackaton
    deactivate hackatonCb

    TeamTab -> Controller : openTeamForm(selectedHackaton)
    activate Controller
    create TeamForm
    Controller -> TeamForm : new TeamForm(titoloHackaton, controller)
    deactivate Controller
    deactivate TeamTab

    == Inserimento nuovo team ==
    Utente -> TeamForm : adds nome team
    Utente -> TeamForm : click addBtn
    activate TeamForm
    TeamForm -> nomeInput : getText()
    activate nomeInput
    nomeInput --> TeamForm : nomeTeam
    deactivate nomeInput
    TeamForm -> Controller : addTeam(titoloHackaton, nomeTeam)
    activate Controller
    Controller --> Controller : getIdHackatonFromName(titoloHackaton)
    activate Controller
    deactivate Controller
    Controller -> TeamDAO : addTeam(idHackaton, nomeTeam)
    activate TeamDAO
    TeamDAO -> Database : prepareStatement("CREATE TABLE IF NOT EXISTS Team (...)")
    activate Database
    Database --> TeamDAO : createTableTeamPS
    deactivate Database
    TeamDAO -> createTableTeamPS : executeUpdate()
    activate createTableTeamPS
    deactivate createTableTeamPS
    TeamDAO -> Database : closePs(createTableTeamPS)
    activate Database
    Database -> createTableTeamPS : close()
    activate createTableTeamPS
    deactivate createTableTeamPS
    deactivate Database

    TeamDAO -> Database : prepareStatement("INSERT INTO Team (...) RETURN_GENERATED_KEYS")
    activate Database
    Database --> TeamDAO : insertTeamPS
    deactivate Database
    TeamDAO -> insertTeamPS : setString(1, nomeTeam)
    activate insertTeamPS
    deactivate insertTeamPS
    TeamDAO -> insertTeamPS : setInt(2, idHackaton)
    activate insertTeamPS
    deactivate insertTeamPS
    TeamDAO -> insertTeamPS : executeUpdate()
    activate insertTeamPS
    deactivate insertTeamPS
    TeamDAO -> insertTeamPS : getGeneratedKeys()
    activate insertTeamPS
    insertTeamPS --> TeamDAO : ResultSet
    deactivate insertTeamPS
    deactivate insertTeamPS
    opt ResultSet.next()
        TeamDAO -> ResultSet : getInt(1)
        activate ResultSet
        ResultSet --> TeamDAO : return idTeam
        deactivate ResultSet
    end
    TeamDAO -> ResultSet : close()
    activate ResultSet
    deactivate ResultSet
    TeamDAO -> insertTeamPS : close()
    activate insertTeamPS
    deactivate insertTeamPS
    TeamDAO --> Controller : return idTeam
    deactivate TeamDAO
    Controller -> Controller : addPartecipanteAlTeam(idTeam, idHackaton)
    activate Controller
    deactivate Controller
    deactivate Controller
    TeamForm -> Controller : dispose()
    activate Controller
    deactivate Controller
    deactivate TeamForm
    @enduml